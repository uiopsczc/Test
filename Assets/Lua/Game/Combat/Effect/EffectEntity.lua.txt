---@class EffectEntity:GameObjectEntity
local EffectEntity = Class("EffectBase", GameObjectEntity)

---@param unit Unit
function EffectEntity:Init(effectId, unit)
	EffectEntity.super.Init(self)
	self._unit = unit
	self._effectId = effectId
	self._cfgEffectData = CfgEffect.GetById(effectId)
	self:GetGraphicComponent():SetPrefabPath(self._cfgEffectData.prefabPath)
end

function EffectEntity:CreateGraphicComponent()
	return self:AddComponent(nil, EffectGraphicComponent, global.client.combat._effectManager:GetResLoadComponent())
end

function EffectEntity:OnAllAssetsLoadDone()
	EffectEntity.super.OnAllAssetsLoadDone(self)
	self:SetIsShow(true)
end

function EffectEntity:InstantiateGameObject(prefab)
	---@type EffectEntity
	self.effectInfo = global.client.combat._effectManager:_CreateEffect(prefab, self)
	self.effectInfo.clone:SetActive(false)
	return self.effectInfo.clone
end

function EffectEntity:OnEffectReach()
	self._parent:RemoveChild(self:GetKey())
end

function EffectEntity:OnNoRemainDuration()
	self._parent:RemoveChild(self:GetKey())
end

function EffectEntity:ApplyToTransformComponent(position, eulerAngles, scale)
	if position then
		self:GetTransformComponent():SetPosition(position)
	end
	if eulerAngles then
		self:GetTransformComponent():SetEulerAngles(eulerAngles)
	end
	if scale then
		self:GetTransformComponent():SetScale(scale)
	end
end

----------------------------------------------------------------------
-- SetGet相关
----------------------------------------------------------------------
function EffectEntity:GetEffectId()
	return self._effectId
end

function EffectEntity:GetCfgEffectData()
	return self._cfgEffectData
end



function EffectEntity:_Destroy()
	EffectEntity.super._Destroy(self)
end

return EffectEntity