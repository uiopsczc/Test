---@class AttachEffectComponent:EffectComponent
local AttachEffectComponent = Class("AttachEffectComponent", EffectComponent)

---@param attachEntityIPosition IPosition
function AttachEffectComponent:Init(attachEntityIPosition, forceEulerAngles, sectorAngle)
	AttachEffectComponent.super.Init()
	attachEntityIPosition:SetSocketName(self.effectEntity.cfgEffectData.socket_name_1)
	---@type CS.UnityEngine.Transform
	self.attachEntityTransform = attachEntityIPosition:GetTransform()
	self.forceEulerAngles = forceEulerAngles
	self.sectorAngle = sectorAngle or 0

	self:AddListener(string.ToEventName(ECSEventNameConst.OnAllAssetsLoadDone, self._entity), function()
		self:OnAllAssetsLoadDone()
	end)
end

function AttachEffectComponent:OnAllAssetsLoadDone()
	self:Attach()
end

function AttachEffectComponent:Attach()
	self:ChangeAttach(true)
end

function AttachEffectComponent:DeAttach()
	self:ChangeAttach(false)
end

function AttachEffectComponent:ChangeAttach(isAttach)
	if not self.effectEntity._graphicComponent._gameObject then
		return
	end
	if self.isAttach == isAttach then
		return
	end

	if isAttach then
		local socketTransform = self.attachEntityTransform
		self.effectEntity._graphicComponent:SetParentTransform(socketTransform)
		self.effectEntity._graphicComponent._transform.localPosition = Vector3.zero
		self.effectEntity._graphicComponent._transform.localRotation = Quaternion.identity
		if self.forceEulerAngles then
			self.effectEntity._graphicComponent._transform.eulerAngles = self.forceEulerAngles
		end
		self:SetSector()
		self.isAttach = true
	else
		self.effectEntity._graphicComponent:SetParentTransform(global.client.combat.effectManager._graphicComponent._transform)
		self.isAttach = false
		self.effectEntity._graphicComponent:SetIsShow(false)
	end
end

function AttachEffectComponent:SetSector()
	if self.sectorAngle ~= 0 then
		local sectorSideLeft = self.effectEntity._graphicComponent._transform:Find("sector/side_left")
		local sectorSideRight = self.effectEntity._graphicComponent._transform:Find("sector/side_right")
		local sectorCenter = self.effectEntity._graphicComponent._transform:Find("sector/center")
		---@type CS.UnityEngine.Material
		local sectorCenterMat = sectorCenter:GetComponent(typeof(CS.UnityEngine.MeshRenderer)).material
		sectorCenterMat:SetFloat("_AngleCos", math.cos(math.Deg2Rad * (self.sectorAngle / 2))) --扇形的角度大小
		sectorSideLeft.localRotation = Quaternion.Euler(0, (self.sectorAngle + 2) / 2, 0) -- 左边界的位置
		sectorSideRight.localRotation = Quaternion.Euler(0, -(self.sectorAngle + 2) / 2, 0) -- 右边界的位置
	end
end

return AttachEffectComponent