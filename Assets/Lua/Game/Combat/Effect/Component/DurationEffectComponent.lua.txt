---@class DurationEffectComponent:EffectComponent
local DurationEffectComponent = Class("DurationEffectComponent", EffectComponent)

function DurationEffectComponent:Init(duration)
	DurationEffectComponent.super.Init(self)
	self:SetDuration(duration)
	self._noRemainDurationCallbackList = {}
end

---@param callback fun()
function DurationEffectComponent:AddNoRemainDurationCallback(callback)
	table.insert(self._noRemainDurationCallbackList, callback)
end

---@param duration number
function DurationEffectComponent:SetDuration(duration)
	self._duration = duration
	self._remainDuration = duration
end

function DurationEffectComponent:_Update(deltaTime, unscaledDeltaTime)
	DurationEffectComponent.super._Update(self, deltaTime, unscaledDeltaTime)
	self._remainDuration = self._remainDuration - deltaTime
	if self._remainDuration <= 0 then
		self:OnNoRemainDuration()
	end
end

function DurationEffectComponent:OnNoRemainDuration()
	self._effectEntity:OnNoRemainDuration()
	DelegateUtil.InvokeCallback(self._noRemainDurationCallbackList)
end

function DurationEffectComponent:_Destroy()
	DurationEffectComponent.super._Destroy(self)
	self._noRemainDurationCallbackList = nil
end

return DurationEffectComponent