---@class DurationEffectComponent:EffectComponent
local DurationEffectComponent = Class("DurationEffectComponent", EffectComponent)

function DurationEffectComponent:Init(duration)
	DurationEffectComponent.super.Init(self)
	self:SetDuration(duration)
	self.noRemainDurationCallbackList = {}
end

---@param callback fun()
function DurationEffectComponent:AddNoRemainDurationCallback(callback)
	table.insert(self.noRemainDurationCallbackList, callback)
end

---@param duration number
function DurationEffectComponent:SetDuration(duration)
	self.duration = duration
	self.remainDuration = duration
end

function DurationEffectComponent:__Update(deltaTime, unscaledDeltaTime)
	DurationEffectComponent.super.__Update(self, deltaTime, unscaledDeltaTime)
	self.remainDuration = self.remainDuration - deltaTime
	if self.remainDuration <= 0 then
		self:OnNoRemainDuration()
	end
end

function DurationEffectComponent:OnNoRemainDuration()
	self.effectEntity:OnNoRemainDuration()
	DelegateUtil.InvokeCallback(self.noRemainDurationCallbackList)
end

function DurationEffectComponent:__Destroy()
	DurationEffectComponent.super.__Destroy(self)
	self.noRemainDurationCallbackList = nil
end

return DurationEffectComponent