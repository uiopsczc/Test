---@class SpinLineEffectComponent:SourceTargetEffectComponent
local SpinLineEffectComponent = Class("SpinLineEffectComponent", SourceTargetEffectComponent)

---@param startPosition Vector3
---@param spinDir Vector3
---@param startSpinAngle number
---@param spinSpeed number
---@param spinLength number
---@param forwardDir Vector3
---@param forwardSpeed number
function SpinLineEffectComponent:Init(startPosition, spinDir, startSpinAngle, spinSpeed, spinLength, forwardDir, forwardSpeed)
	SpinLineEffectComponent.super.Init(self)

	self._spinSpeed = spinSpeed
	self._forwardDir = forwardDir
	self._forwardSpeed = forwardSpeed or 0
	self._spinDir = spinDir
	self._startPosition = startPosition
	self._startSpinAngle = startSpinAngle
	self._spinLength = spinLength
	self._elapsedDuration = 0

	self:Calculate(0)
	self._effectEntity:ApplyToTransformComponent(self._currentPosition, self._currentEulerAngles)
end

function SpinLineEffectComponent:Calculate(deltaTime)
	self._elapsedDuration = self._elapsedDuration + deltaTime
	local forwardDistance = self._forwardSpeed * self._elapsedDuration * self._forwardDir
	local arcDir = Quaternion.AngleAxis(self._startSpinAngle + self._spinSpeed * self._elapsedDuration, Vector3.up) * self._spinDir-- 电弧当前朝向
	self._currentPosition = self._startPosition + forwardDistance + arcDir * self._spinLength -- 电弧当前结束位置
	self._currentEulerAngles = Vector3.zero
end

return SpinLineEffectComponent