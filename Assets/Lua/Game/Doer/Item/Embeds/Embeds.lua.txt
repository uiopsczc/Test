---@class Embeds
local Embeds = Class("Embeds")
------------------------镶物容器------------------------------
function Embeds:Init(parentDoer, subDoerKey)
	---@type Item
	self.parentDoer = parentDoer
	self.subDoerKey = subDoerKey
end
------------------------DoXXX--------------------------------
-- 卸载
function Embeds:DoRelease()
	SubDoerUtil1.DoReleaseSubDoer(self.parentDoer, self.subDoerKey)
end

-- 保存
function Embeds:DoSave(dict, dictTmp, saveKey)
	saveKey = saveKey or "embed_ids"
	local embeds = self:GetEmbeds()
	local dictEmbedIds = {}
	for _, embed in ipairs(embeds) do
		table.insert(dictEmbedIds, embed:GetId())
	end
	dict[saveKey] = table.GetNilIfEmpty(dictEmbedIds)
end

-- 还原
function Embeds:DoRestore(dict, dictTmp, restoreKey)
	restoreKey = restoreKey or "embed_ids"
	self:ClearEmbeds()
	local dictEmbedIds = table.Remove_Dict(dict, restoreKey)
	if not table.IsNilOrEmpty(dictEmbedIds) then
		local embeds = self:GetEmbeds_ToEdit()
		for i = 1, #dictEmbedIds do
			local embedId = dictEmbedIds[i]
			local embed = self.parentDoer.factory:NewDoer(embedId)
			embed:SetEnv(self.parentDoer)
			table.insert(embeds, embed)
		end
	end
end
--------------------------OnXXX-------------------

---------------------------------------------
-- 获得指定的镶物
---@param id string
---@return Item[]
function Embeds:GetEmbeds(id)
	return SubDoerUtil1.GetSubDoers(self.parentDoer, self.subDoerKey, id)
end

---@return Item[]
function Embeds:GetEmbeds_ToEdit()
	--可以直接插入删除
	return SubDoerUtil1.GetSubDoers_ToEdit(self.parentDoer, self.subDoerKey)
end

-- 是否有镶物
function Embeds:HasEmbeds()
	return SubDoerUtil1.HasSubDoers(self.parentDoer, self.subDoerKey)
end

function Embeds:GetEmbedsCount()
	return SubDoerUtil1.GetSubDoersCount(self.parentDoer, self.subDoerKey)
end

-- 获得指定的镶物
---@param idOrRid string
---@return Item
function Embeds:GetEmbed(idOrRid)
	return SubDoerUtil1.GetSubDoer(self.parentDoer, self.subDoerKey, idOrRid)
end

-- 清除所有镶物
function Embeds:ClearEmbeds()
	return SubDoerUtil1.ClearSubDoers(self.parentDoer, self.subDoerKey, function(embed)
		self.parentDoer:EmbedOff(embed)
	end)
end

return Embeds