---@class SceneItems
local SceneItems = Class("SceneItems")
------------------------SceneItems容器------------------------------
function SceneItems:Init(parentDoer, subDoerKey)
	---@type Scene
	self.parentDoer = parentDoer
	self.subDoerKey = subDoerKey
end
------------------------DoXXX--------------------------------
-- 卸载
function SceneItems:DoRelease()
	SubDoerUtil3.DoRelease(self.parentDoer, self.subDoerKey)
end

-- 保存
function SceneItems:DoSave(dict, dictTmp, saveKey)
	saveKey = saveKey or "scene_items"
	local items = self:GetItems()
	local dictItems = {}
	local dictItemsTmp = {}
	for _, item in ipairs(items) do
		local dictItem = {}
		local dictItemTmp = {}
		item:PrepareSave(dictItem, dictItemTmp)
		local rid = item:GetRid()
		dictItems[rid] = dictItem
		if not table.IsNilOrEmpty(dictItemTmp) then
			dictItemsTmp[rid] = dictItemTmp
		end
	end
	dict[saveKey] = table.GetNilIfEmpty(dictItems)
	dictTmp[saveKey] = table.GetNilIfEmpty(dictItemsTmp)
end

-- 还原
function SceneItems:DoRestore(dict, dictTmp, restoreKey)
	restoreKey = restoreKey or "scene_items"
	self:ClearItems()
	local dictItems = table.Remove_Dict(dict, restoreKey)
	local dictItemsTmp = table.Remove_Dict(dictTmp, restoreKey)
	if not table.IsNilOrEmpty(dictItems) then
		for rid, _ in pairs(dictItems) do
			local itemDict = self:GetItemDict_ToEdit()
			local dictItem = dictItems[rid]
			---@type Item
			local item = global.client.itemFactory:NewDoer(rid)
			item:SetEnv(self.parentDoer)
			local dictItemTmp
			if dictItemsTmp ~= nil then
				dictItemTmp = dictItemsTmp[rid]
			end
			item:FinishRestore(dictItem, dictItemTmp)
			itemDict[rid] = item
		end
	end
end
--------------------------OnXXX-------------------

--------------------------------------------------
---@param filterFunc fun(sub_doer:Item)
---@return Item[]
function SceneItems:GetItems(id, filterFunc)
	return SubDoerUtil3.GetSubDoers(self.parentDoer, self.subDoerKey, id, filterFunc)
end

-- 可以直接插入删除
---@return table<string,Item>
function SceneItems:GetItemDict_ToEdit()
	return SubDoerUtil3.GetSubDoerDict_ToEdit(self.parentDoer, self.subDoerKey)
end

---@param id_or_rid string
---@return Item
function SceneItems:GetItem(id_or_rid)
	return SubDoerUtil3.GetSubDoer(self.parentDoer, self.subDoerKey, id_or_rid)
end

function SceneItems:ClearItems()
	SubDoerUtil3.ClearSubDoers(self.parentDoer, self.subDoerKey)
end

return SceneItems