---@class Missions
local Missions = Class("Missions")
----------------------------------------------------------------------
-- 背包容器
----------------------------------------------------------------------
function Missions:Init(parentDoer, subDoerKey)
	---@type Doer
	self._parentDoer = parentDoer
	self._subDoerKey = subDoerKey
end

----------------------------------------------------------------------
-- DoXXX
----------------------------------------------------------------------
-- 卸载
function Missions:DoRelease()
	SubDoerUtil1.DoReleaseSubDoer(self._parentDoer, self._subDoerKey)
end

-- 保存
function Missions:DoSave(dict, dictTmp, saveKey)
	saveKey = saveKey or "missions"
	local missions = self:GetMissions()
	local listMissions = {}
	local dictMissionsTmp = {}
	for _, mission in ipairs(missions) do
		local rid = mission:GetRid()
		local dictMission = {}
		local dictMissionTmp = {}
		mission:PrepareSave(dictMission, dictMissionTmp)
		dictMission["rid"] = rid
		table.insert(listMissions, dictMission)
		if not table.IsNilOrEmpty(dictMissionTmp) then
			dictMissionsTmp[rid] = dictMissionTmp
		end
	end
	dict[saveKey] = table.GetNilIfEmpty(listMissions)
	dictTmp[saveKey] = table.GetNilIfEmpty(dictMissionsTmp)
end

-- 还原
function Missions:DoRestore(dict, dictTmp, restoreKey)
	restoreKey = restoreKey or "missions"
	self:ClearMissions()
	local listMissions = table.Remove_Dict(dict, restoreKey)
	local dictMissionsTmp = table.Remove_Dict(dictTmp, restoreKey)
	if not table.IsNilOrEmpty(listMissions) then
		for id, _ in pairs(listMissions) do
			---@type Item
			local mission
			local missions = self:GetMissions_ToEdit(id)
			for _, dictMission in ipairs(listMissions) do
				local rid = table.Remove_Dict(dictMission, "rid")
				mission = global.client.itemFactory:NewDoer(rid)
				mission:SetEnv(self._parentDoer)
				local dictMissionTmp
				if dictMissionsTmp then
					dictMissionTmp = dictMissionsTmp[rid]
				end
				mission:FinishRestore(dictMission, dictMissionTmp)
				table.insert(missions, mission)
			end
		end
	end
end
----------------------------------------------------------------------
-- OnXXX
----------------------------------------------------------------------

---@param id string
---@return Mission[]
function Missions:GetMissions(id)
	return SubDoerUtil1.GetSubDoers(self._parentDoer, self._subDoerKey, id)
end

-- 可以直接插入删除
---@param id string
---@return Mission[]
function Missions:GetMissions_ToEdit(id)
	return SubDoerUtil1.GetSubDoers_ToEdit(self._parentDoer, self._subDoerKey, id)
end

function Missions:HasMissions()
	return SubDoerUtil1.IsHasSubDoers(self._parentDoer, self._subDoerKey)
end

function Missions:GetMissionsCount()
	return SubDoerUtil1.GetSubDoersCount(self._parentDoer, self._subDoerKey)
end

---@param id_or_rid string
---@return Mission
function Missions:GetMission(id_or_rid)
	return SubDoerUtil1.GetSubDoer(self._parentDoer, self._subDoerKey, id_or_rid)
end

function Missions:ClearMissions()
	return SubDoerUtil1.ClearSubDoers(self._parentDoer, self._subDoerKey, function(mission)
	end)
end

return Missions