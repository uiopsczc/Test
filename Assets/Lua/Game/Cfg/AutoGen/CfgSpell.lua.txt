--AutoGen. DO NOT EDIT!!!
--ExportFrom JN技能表.xlsx[技能]
---@class CfgSpellData
---@field id
---@field name
---@field classPathLua
---@field classPathCs
---@field isCanMoveWhileCast
---@field range
---@field damageFactor
---@field type
---@field targetType
---@field damageType
---@field castType
---@field actionName
---@field animationName
---@field animationDuration
---@field handEffectIds
---@field goEffectIds
---@field hitEffectIds
---@field groundEffectIds
---@field lineEffectIds
---@field isNotFaceToTarget
---@field castTime
---@field breakTime
---@field newSpellTriggerIds
---@field isNeedTarget
---@field cooldownDuration
---@field passiveBuffIds
---@field selectUnitArgDict
---@field argDict
local _



---@type CfgSpellData[]
local data_list = {
  {
    id = [=[1]=],
    name = [=[技能1]=],
    classPathLua = [=[]=],
    classPathCs = [=[]=],
    isCanMoveWhileCast = false,
    range = 0.0,
    damageFactor = 0.0,
    type = [=[]=],
    targetType = [=[]=],
    damageType = [=[]=],
    castType = [=[]=],
    actionName = [=[]=],
    animationName = [=[]=],
    animationDuration = 0.0,
    handEffectIds = json:decode([=[[]]=]),
    goEffectIds = json:decode([=[[]]=]),
    hitEffectIds = json:decode([=[[]]=]),
    groundEffectIds = json:decode([=[[]]=]),
    lineEffectIds = json:decode([=[[]]=]),
    isNotFaceToTarget = false,
    castTime = 0.0,
    breakTime = 0.0,
    newSpellTriggerIds = json:decode([=[[]]=]),
    isNeedTarget = false,
    cooldownDuration = 0.0,
    passiveBuffIds = json:decode([=[[]]=]),
    selectUnitArgDict = json:decode([=[{}]=]),
    argDict = json:decode([=[{}]=]),
  },
}

local index_dict = {
  unique = {
    id = {
      [
        [=[1]=]
      ] = 1,
    },
  },
}

local cfg = {}

function cfg.All()
  return data_list
end

function cfg.Get(index)
  return data_list[index]
end

function cfg.GetById(id)
  local key = tostring(id)
  return cfg.Get(index_dict.unique.id[key])
end

function cfg.IsContainsKeyById(id)
  local key = tostring(id)
  return index_dict.unique.id[key] ~= nil
end

return cfg
