---@class CamerUtil
CameraUtil = {}

---@param camera CS.UnityEngine.Camera
function CameraUtil.GetRectSizeByDistance(camera, distance)
	local tanOfFov = math.tan(camera.fieldOfView / 2 * math.Deg2Rad)
	local halfHeight = tanOfFov * distance
	local halfWidth = halfHeight * CS.UnityEngine.Screen.width / CS.UnityEngine.Screen.height
	return Vector2(halfWidth * 2, halfHeight * 2)
end

-----------------------------------ToUIPos-------------------------------------------------------------
-- 世界坐标转UI坐标
---@param worldCamera CS.UnityEngine.Camera
---@param canvasRectTransform CS.UnityEngine.RectTransform
---@param uiPosPivot Vector2
---@param viewportOffset Vector2
function CameraUtil.WorldToUIPos(canvasRectTransform, worldCamera, worldPosition, uiPosPivot, viewportOffset)
	canvasRectTransform = canvasRectTransform or global.client.uiManager._uiCanvasRectTransform
	-- 世界坐标-》ViewPort坐标
	local viewportPos = worldCamera:WorldToViewportPoint(worldPosition)
	return CameraUtil.ViewPortToUIPos(canvasRectTransform, viewportPos, uiPosPivot, viewportOffset)
end

-- 屏幕坐标转UI坐标
---@param screenCamera CS.UnityEngine.Camera
---@param canvasRectTransform CS.UnityEngine.RectTransform
---@param uiPosPivot Vector2
---@param viewportOffset Vector2
function CameraUtil.ScreenToUIPos(canvasRectTransform, screenCamera, screenPoint, uiPosPivot, viewportOffset)
	canvasRectTransform = canvasRectTransform or global.client.uiManager._uiCanvasRectTransform
	screenCamera = screenCamera or global.client.uiManager._uiCamera
	-- 世界坐标-》ViewPort坐标
	local viewportPos = screenCamera:ScreenToViewportPoint(screenPoint)
	return CameraUtil.ViewPortToUIPos(canvasRectTransform, viewportPos, uiPosPivot, viewportOffset)
end


-- 屏幕坐标转UI坐标
---@param canvasRectTransform CS.UnityEngine.RectTransform
---@param uiPosPivot Vector2
---@param viewportOffset Vector2
function CameraUtil.ViewPortToUIPos(canvasRectTransform, viewportPos, uiPosPivot, viewportOffset)
	canvasRectTransform = canvasRectTransform or global.client.uiManager._uiCanvasRectTransform
	-- uiPosPivot_x =0.5,uiPosPivot_y = 0.5 MiddleCenter
	-- uiPosPivot_x =0.5,uiPosPivot_y = 0 MiddleBottom
	-- uiPosPivot_x =0.5,uiPosPivot_y = 1 MiddleTop

	-- uiPosPivot_x =0,uiPosPivot_y = 0.5 LeftCenter
	-- uiPosPivot_x =0,uiPosPivot_y = 0 LeftBottom
	-- uiPosPivot_x =0,uiPosPivot_y = 1 LeftTop

	-- uiPosPivot_x =1,uiPosPivot_y = 0.5 RightCenter
	-- uiPosPivot_x =1,uiPosPivot_y = 0 RightBottom
	-- uiPosPivot_x =1,uiPosPivot_y = 1 RightTop
	uiPosPivot = uiPosPivot or Vector2(0.5, 0.5) -- MiddleCenter
	viewportOffset = viewportOffset or Vector2(0, 0)
	viewportPos = Vector2(viewportPos.x, viewportPos.y)
	viewportPos = viewportPos - uiPosPivot
	viewportPos = viewportPos + viewportOffset
	-- ViewPort坐标-〉UGUI坐标
	return Vector2(canvasRectTransform.rect.width * viewportPos.x, canvasRectTransform.rect.height * viewportPos.y)
end

-----------------------------------ToWorldPos-------------------------------------------------------------
-- UI坐标转世界坐标
---@param worldCamera CS.UnityEngine.Camera
---@param canvasRectTransform CS.UnityEngine.RectTransform
---@param uiPosPivot Vector2
---@param viewportOffset Vector2
function CameraUtil.UIPosToWorld(canvasRectTransform, worldCamera, uiPos, uiPosPivot, viewportZ, viewportOffset)
	canvasRectTransform = canvasRectTransform or global.client.uiManager._uiCanvasRectTransform
	local viewportPos = CameraUtil.UIPosToViewPortPos(canvasRectTransform, uiPos, uiPosPivot, 0, viewportOffset)
	viewportPos = Vector3.New(viewportPos.x, viewportPos.y, viewportZ)
	-- ViewPort坐标 -》 世界坐标
	return worldCamera:ViewportToWorldPoint(viewportPos)
end

-----------------------------------ToScreenPos-------------------------------------------------------------
-- UI坐标转屏幕坐标
---@param screenCamera CS.UnityEngine.Camera
---@param canvasRectTransform CS.UnityEngine.RectTransform
---@param uiPos Vector2
---@param uiPosPivot Vector2
---@param viewportOffset Vector2
function CameraUtil.UIPosToScreenPos(canvasRectTransform, screenCamera, uiPos, uiPosPivot, viewportOffset)
	canvasRectTransform = canvasRectTransform or global.client.uiManager._uiCanvasRectTransform
	screenCamera = screenCamera or global.client.uiManager._uiCamera
	local viewportPos = CameraUtil.UIPosToViewPortPos(canvasRectTransform, uiPos, uiPosPivot, 0, viewportOffset)
	-- ViewPort坐标-》屏幕坐标
	local screenPos = screenCamera:ViewportToScreenPoint(viewportPos)
	return screenPos
end
-----------------------------------ToViewPortPos-------------------------------------------------------------
-- UI坐标转ViewPort坐标
---@param camera CS.UnityEngine.Camera
---@param canvasRectTransform CS.UnityEngine.RectTransform
---@param uiPos Vector2
---@param uiPosPivot Vector2
---@param viewportZ number
---@param viewportOffset Vector2
function CameraUtil.UIPosToViewPortPos(canvasRectTransform, uiPos, uiPosPivot, viewportZ, viewportOffset)
	canvasRectTransform = canvasRectTransform or global.client.uiManager._uiCanvasRectTransform
	viewportZ = viewportZ or 0
	-- uiPosPivot_x =0.5,uiPosPivot_y = 0.5 MiddleCenter
	-- uiPosPivot_x =0.5,uiPosPivot_y = 0 MiddleBottom
	-- uiPosPivot_x =0.5,uiPosPivot_y = 1 MiddleTop

	-- uiPosPivot_x =0,uiPosPivot_y = 0.5 LeftCenter
	-- uiPosPivot_x =0,uiPosPivot_y = 0 LeftBottom
	-- uiPosPivot_x =0,uiPosPivot_y = 1 LeftTop

	-- uiPosPivot_x =1,uiPosPivot_y = 0.5 RightCenter
	-- uiPosPivot_x =1,uiPosPivot_y = 0 RightBottom
	-- uiPosPivot_x =1,uiPosPivot_y = 1 RightTop
	uiPosPivot = uiPosPivot or Vector2(0.5, 0.5) -- MiddleCenter
	viewportOffset = viewportOffset or Vector2(0, 0)
	-- UGUI坐标 -〉ViewPort
	local viewportPos = Vector2.New(uiPos.x / canvasRectTransform.rect.width, uiPos.y / canvasRectTransform.rect.height)
	viewportPos = viewportPos + uiPosPivot
	viewportPos = viewportPos + viewportOffset
	return Vector3.New(viewportPos.x, viewportPos.y, viewportZ)
end

---@param camera CS.UnityEngine.Camera
---@param worldPosition Vector3
function CameraUtil.IsPosInViewPort(camera, worldPosition)
	local viewportPosition = camera:WorldToViewportPoint(worldPosition)
	if viewportPosition.z > 0 and viewportPosition.x >= 0 and viewportPosition.x <= 1 and viewportPosition.y >= 0 and viewportPosition.y <= 0 then
		return true
	end
	return false
end

