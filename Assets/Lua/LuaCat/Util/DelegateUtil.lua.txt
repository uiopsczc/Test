---@class DelegateUtil
DelegateUtil = {}


function DelegateUtil.Add(source, func)
  if not source then
    if func then
      return func
    else
      return nil
    end
  else
    if func then
      return source + func
    else
      return source
    end
  end
end


function DelegateUtil.Remove(source, func)
  if not source then
    return nil
  else
    if func then
      return source - func
    else
      return source
    end
  end
end


function DelegateUtil.InvokeCallback(callback_list,...)
  for _, callback in ipairs(callback_list) do
    callback(...)
  end
end

function DelegateUtil.AddCallback(callback_list,func)
  table.insert(callback_list,func)
end

function DelegateUtil.RemoveCallback(callback_list,func)
  table.RemoveByValue_Array(callback_list, func)
end


--delegate使用
--cs端：
--class A{
--  Action onLoaded
--}
--lua端：
--function yyy_lua_function() log("yyy") end
--local xx = A()
--if yyy_lua_function then
--  if xx.onLoaded then
--    xx.onLoaded = xx.onLoaded + yyy_lua_function
--  else
--    xx.onLoaded = yyy_lua_function
--  end
--end



