local UnityObjectPoolCat = require("luacat.poolCat.UnityObjectPoolCat")
---@class GameObjectPoolCat:UnityObjectPoolCat
local GameObjectPoolCat = Class("GameObjectPoolCat", UnityObjectPoolCat)

---@param poolName string
---@param prefab CS.UnityEngine.Object
---@param category string
function GameObjectPoolCat:Init(poolName, prefab, category)
	GameObjectPoolCat.super.Init(self, poolName, prefab, category)
end

---@param onSpawnCallback fun(spawn:any)
function GameObjectPoolCat:Spawn(onSpawnCallback)
	---@type CS.UnityEngine.GameObject
	local cloneGameObject = GameObjectPoolCat.super.Spawn(self, onSpawnCallback)
	CacheUtil.CacheSet(cloneGameObject, PoolCatConst.Pool_Name, self)
	cloneGameObject:SetCache(CS.CsCat.PoolCatConst.Lua_Pool_Name, self)
	cloneGameObject:SetActive(true)
	cloneGameObject.transform:CopyFrom(self:GetPrefab().transform)
	return cloneGameObject
end

---@param onSpawnCallback fun(spawn:CS.UnityEngine.GameObject)
function GameObjectPoolCat:SpawnGameObject(onSpawnCallback)
	return self:Spawn(onSpawnCallback)
end

return GameObjectPoolCat