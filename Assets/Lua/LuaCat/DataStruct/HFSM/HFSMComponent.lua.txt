---@class HFSMComponent:GameComponent
local HFSMComponent = Class("HFSMComponent", AbstractComponent)

---@param hfsm HFSM
function HFSMComponent:Init(hfsm)
	HFSMComponent.super.Init(self)
	self._hfsm = hfsm
end

---@param isPaused boolean
function HFSMComponent:_SetIsPaused(isPaused)
	HFSMComponent.super._SetIsPaused(self, isPaused)
	self._hfsm:SetIsPaused(true, true)
end

---@param isEnabled boolean
function HFSMComponent:_SetIsEnabled(isEnabled)
	HFSMComponent.super._SetIsEnabled(self, isEnabled)
	self._hfsm:SetIsEnabled(true, true)
end

function HFSMComponent:Update(deltaTime, unscaledDeltaTime)
	HFSMComponent.super.Update(self, deltaTime, unscaledDeltaTime)
	self._hfsm:CheckDestroyed()
end

function HFSMComponent:_Update(deltaTime, unscaledDeltaTime)
	HFSMComponent.super._Update(self, deltaTime, unscaledDeltaTime)
	self._hfsm:Update(deltaTime, unscaledDeltaTime)
end

function HFSMComponent:_FixedUpdate(deltaTime, unscaledDeltaTime)
	HFSMComponent.super._FixedUpdate(self, deltaTime, unscaledDeltaTime)
	self._hfsm:FixedUpdate(deltaTime, unscaledDeltaTime)
end

function HFSMComponent:_LateUpdate(deltaTime, unscaledDeltaTime)
	HFSMComponent.super._LateUpdate(self, deltaTime, unscaledDeltaTime)
	self._hfsm:LateUpdate(deltaTime, unscaledDeltaTime)
end

function HFSMComponent:_Reset()
	HFSMComponent.super._Reset(self)
	self._hfsm:Reset(true)
end

function HFSMComponent:_Destroy()
	HFSMComponent.super._Destroy(self)
	self._hfsm:Destroy()
end

return HFSMComponent
