---@class Counter:Class
local Counter = Class("Counter")

function Counter:Init()
	self._count = 0
	self._changeValueInvokeFuncList = {}
end

function Counter:Increase()
	self._count = self._count + 1
	self:_CheckFunc()
end

function Counter:Decrease()
	self._count = self._count - 1
	self:_CheckFunc()
end

function Counter:Reset()
	self._count = 0
	self._changeValueInvokeFuncList = {}
end

function Counter:AddChangeValueInvokeFunc(func)
	table.insert(self._changeValueInvokeFuncList, func)
end

function Counter:_CheckFunc()
	if not table.IsNilOrEmpty(self._changeValueInvokeFuncList) then
		for _, func in ipairs(self._changeValueInvokeFuncList) do
			func()
		end
	end
end

function Counter:GetCount()
	return self._count
end

return Counter
