---@class ResLoadComponent:GameComponent
local ResLoadComponent = Class("ResLoadComponent", GameComponent)

---@param resLoad ResLoad
function ResLoadComponent:Init(resLoad)
	ResLoadComponent.super.Init(self)
	self._resLoad = resLoad
end

function ResLoadComponent:IsAllLoadDone()
	return self._resLoad:IsAllLoadDone()
end

---@param onAllLoadDoneCallback fun()
function ResLoadComponent:CheckIsAllLoadDone(onAllLoadDoneCallback)
	self:StartCoroutine(nil, function()
		self:WaitUntil(function()
			return self:IsAllLoadDone()
		end)
		if onAllLoadDoneCallback then
			onAllLoadDoneCallback()
		end
	end)
end

---@param onLoadSuccessCallback fun(assetCat:CS.CsCat.AssetCat)
---@param onLoadFailCallback fun(assetCat:CS.CsCat.AssetCat)
---@param onLoadDoneCallback fun(assetCat:CS.CsCat.AssetCat)
---@param callbackCause any
function ResLoadComponent:GetOrLoadAsset(assetPath, onLoadSuccessCallback, onLoadFailCallback, onLoadDoneCallback, callbackCause)
	return self._resLoad:GetOrLoadAsset(assetPath, onLoadSuccessCallback, onLoadFailCallback, onLoadDoneCallback, callbackCause)
end

---@param assetCat CS.CsCat.AssetCat
function ResLoadComponent:CancelLoadCallback(assetCat, callbackCause)
	self._resLoad:CancelLoadCallback(assetCat, callbackCause)
end

---@param assetCat CS.CsCat.AssetCat
function ResLoadComponent:CancelLoadAllCallbacks(assetCat)
	self._resLoad:CancelLoadAllCallbacks(assetCat)
end

----------------------------------------------------------------------
-- SetGet相关
----------------------------------------------------------------------
function ResLoadComponent:GetResLoad()
	return self._resLoad
end

function ResLoadComponent:_Reset()
	ResLoadComponent.super._Reset(self)
	self._resLoad:Reset()
end

function ResLoadComponent:_Destroy()
	ResLoadComponent.super._Destroy(self)
	self._resLoad:Destroy()
end

return ResLoadComponent