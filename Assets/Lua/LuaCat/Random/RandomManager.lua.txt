-- 与Unity的Random保持一致
---@class RandomManager
local RandomManager = Class("RandomManager")
function RandomManager:Init(seed)
	self._randomSeed = seed or nil
	if self._randomSeed then
		self._seed = math.floor(self._randomSeed) % 0x10000000
	else
		self._seed = math.random(0, 0x10000000 - 1)
		self._randomSeed = self._seed
	end
end

local function _Randomize(self)
	self.seed = (22695477 * self.seed + 1) % 0x10000000
end

function RandomManager:GetSeedOriginal()
	return self._randomSeed
end

function RandomManager:GetSeedCurrent()
	return self._seed
end

function RandomManager:_Random()
	_Randomize(self)
	return self._seed / 0x10000000
end

function RandomManager:RandomBoolean()
	if self:RandomFloat() < 0.5 then
		return true
	else
		return false
	end
end

-- 包括m和不包括n
function RandomManager:RandomInt(m, n)
	_Randomize(self)
	if n then
		return math.floor(m + self._seed / 0x10000000 * (n - m))
	else
		return math.floor(0 + self._seed / 0x10000000 * (m - 0))
	end
end

-- 包括m,包括n
function RandomManager:RandomFloat(m, n)
	_Randomize(self)
	local r = self._seed / (0x10000000 - 1)
	if r > 0.99999 then
		r = 1
	end
	if m and n then
		return m + r * (n - m)
	elseif m and not n then
		return 0 + r * (m - 0)
	else
		return r
	end
end

function RandomManager:RandomSelect(array, count, isUnique)
	isUnique = isUnique or false
	count = count or 1
	local infoArray = {
		--{index = xx,weight =yy}....
	}

	for i, v in ipairs(array) do
		local index = i
		local weight
		if IsTable(v) and v.weight then
			weight = v.weight
		else
			weight = 1 -- 默认是1
		end
		table.insert(infoArray, { index = index, weight = weight })
	end

	-- is_unique为true的时候,count为最多为array的长度
	if isUnique and count > #array then
		count = #array
	end

	local totalWeightOrg = 0
	for _, info in ipairs(infoArray) do
		totalWeightOrg = totalWeightOrg + info.weight
	end

	local result = {}
	local totalWeight = totalWeightOrg
	local totalWeightRemove = 0
	for i = 1, count do
		totalWeight = totalWeightOrg - totalWeightRemove
		for j = #infoArray, 1, -1 do
			local info = infoArray[j]
			local weight = info.weight
			local index = info.index
			local data = array[index]
			if self:RandomFloat() <= weight / totalWeight then
				table.insert(result, data)
				if isUnique then
					table.remove(infoArray, j)
					totalWeightRemove = totalWeightRemove + weight
				end
				break
			end
			totalWeight = totalWeight - weight
		end
	end

	return result
end

function RandomManager:Destroy()
	self._seed = nil
end

return RandomManager