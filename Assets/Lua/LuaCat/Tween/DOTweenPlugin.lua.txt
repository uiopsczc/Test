---@class DOTweenPlugin
local DOTweenPlugin = Class("DOTweenPlugin")

function DOTweenPlugin:Init()
	---@type table<string,CS.DG.Tweening.Tween>
	self.dict = {}
	---@type IdPool
	self.idPool = IdPool.New()
end

---@param key string
---@return CS.DG.Tweening.Sequence
function DOTweenPlugin:AddDOTweenSequence(key)
	self:CleanNotActiveDOTweens()
	if key and self.dict[key] then
		self:RemoveDOTween(key)
	end
	if not key then
		key = tostring(self.idPool:Get())
	end
	---@type CS.DG.Tweening.Sequence
	local sequence = CS.DG.Tweening.Sequence()
	self.dict[key] = sequence
	return sequence
end

---@param key string
---@param tween CS.DG.Tweening.Tween
---@return CS.DG.Tweening.Tween
function DOTweenPlugin:AddDOTween(key, tween)
	self:CleanNotActiveDOTweens()
	if key and self.dict[key] then
		self:RemoveDOTween(key)
	end
	if not key then
		key = tostring(self.idPool:Get())
	end
	self.dict[key] = tween
	return tween
end

---@param keyOrTween CS.DG.Tweening.Tween||string
function DOTweenPlugin:RemoveDOTween(keyOrTween)
	if IsString(keyOrTween) then
		local key = keyOrTween
		self:CleanNotActiveDOTweens()
		if self.dict[key] and self.dict[key]:IsActive() then
			self.dict[key]:Kill()
		end
		self.dict[key] = nil
		self.idPool:Despawn(key)
	else
		local tween = keyOrTween
		local key
		for curKey, curTween in pairs(self.dict) do
			if curTween == tween then
				key = curKey
				break
			end
		end
		if key then
			self:RemoveDOTween(key)
		end
	end
end

function DOTweenPlugin:CleanNotActiveDOTweens()
	for curKey, curTween in pairs(self.dict) do
		if not curTween:IsActive() then
			self.dict[curKey] = nil
			self.idPool:Despawn(curKey)
		end
	end
end

function DOTweenPlugin:RemoveAllDOTweens()
	for curKey, curTween in pairs(self.dict) do
		if curTween:IsActive() then
			curTween:Kill()
		end
	end
	self.dict = {}
	self.idPool:DespawnAll()
end

function DOTweenPlugin:SetIsPaused(is_paused)
	for curKey, curTween in pairs(self.dict) do
		if curTween:IsActive() then
			if is_paused then
				curTween:Pause()
			else
				curTween:Play()
			end
		end
	end
end

function DOTweenPlugin:Destroy()
	self:RemoveAllDOTweens()
end

return DOTweenPlugin