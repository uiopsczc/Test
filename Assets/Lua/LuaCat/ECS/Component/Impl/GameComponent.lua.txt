---@class GameComponent:AbstractComponent
-----注意创建后记得设置key和entity
local GameComponent = Class("GameComponent", AbstractComponent)

-----注意创建后记得设置key和entity
function GameComponent:Init(...)
	GameComponent.super.Init(self, ...)
	---@type DOTweenPlugin
	self._dotweenPlugin = DOTweenPlugin.New()
end

----------------------------------------------------------------------
-- CoroutinePlugin
----------------------------------------------------------------------
---@return CoroutinePlugin
function GameComponent:GetCoroutinePlugin()
	if not self._coroutinePlugin then
		self._coroutinePlugin = CoroutinePlugin.New(self:GetTimerManager())
	end
	return self._coroutinePlugin
end

function GameComponent:StartCoroutine(key, func, ...)
	self:GetCoroutinePlugin():StartCoroutine(key, func, ...)
end

function GameComponent:StopCoroutine(keyOrCo)
	self:GetCoroutinePlugin():StopCoroutine(keyOrCo)
end

function GameComponent:StopAllCoroutines()
	self:GetCoroutinePlugin():StopAllCoroutines()
end

function GameComponent:SetIsPaused_Coroutines(isPaused)
	self:GetCoroutinePlugin():SetIsPaused(isPaused)
end

function GameComponent:WaitForFixedUpdate()
	return CoroutinePlugin:WaitForFixedUpdate()
end

function GameComponent:WaitForFrames(frames)
	return CoroutinePlugin:WaitForFrames(frames)
end

function GameComponent:WaitForSeconds(seconds)
	return CoroutinePlugin:WaitForSeconds(seconds)
end

function GameComponent:WaitForAsyncOp(asyncOperation, callback)
	return CoroutinePlugin:WaitForSeconds(asyncOperation, callback)
end

function GameComponent:WaitUntil(func, ...)
	return CoroutinePlugin:WaitUntil(func, ...)
end

function GameComponent:WaitWhile(func, ...)
	return CoroutinePlugin:WaitWhile(func, ...)
end

function GameComponent:WaitForEndOfFrame()
	return CoroutinePlugin:WaitForEndOfFrame()
end

----------------------------------------------------------------------
-- DOTweenPlugin
----------------------------------------------------------------------
---@param key string
---@return CS.DG.Tweening.Sequence
function GameComponent:AddDOTweenSequence(key)
	return self._dotweenPlugin:AddDOTweenSequence(key)
end

---@param key string
---@param tween CS.DG.Tweening.Tween
---@return CS.DG.Tweening.Tween
function GameComponent:AddDOTween(key, tween)
	return self._dotweenPlugin:AddDOTween(key, tween)
end

---@param keyOrTween CS.DG.Tweening.Tween||string
function GameComponent:RemoveDOTween(keyOrTween)
	self._dotweenPlugin:RemoveDOTween(keyOrTween)
end

function GameComponent:RemoveAllDOTweens()
	self._dotweenPlugin:RemoveAllDOTweens()
end

function GameComponent:SetIsPaused_DOTweens(isPaused)
	self._dotweenPlugin:SetIsPaused(isPaused)
end

----------------------------------------------------------------------
-- EventDispatcherPlugin
----------------------------------------------------------------------
---@return EventDispatcherPlugin
function GameComponent:GetEventDispatcherPlugin()
	if not self.eventDispatcherPlugin then
		self.eventDispatcherPlugin = EventDispatcherPlugin.New(global.client.eventDispatcher)
	end
	return self.eventDispatcherPlugin
end

---@return EventListener
function GameComponent:AddListener(eventName, handler)
	return self:GetEventDispatcherPlugin():AddListener(eventName, handler)
end

---@return EventListener
-- ... 包含3种情况
-- 情况1 只有一个listener
-- 情况2 只有一个handler
-- 情况3 有一个eventName和一个handler
function GameComponent:RemoveListener(...)
	return self:GetEventDispatcherPlugin():RemoveListener(...)
end

function GameComponent:RemoveAllListeners()
	self:GetEventDispatcherPlugin():RemoveAllListeners()
end

function GameComponent:Broadcast(eventName, ...)
	self:GetEventDispatcherPlugin():Broadcast(eventName, ...)
end

----------------------------------------------------------------------
-- TimerManagerPlugin
----------------------------------------------------------------------
function GameComponent:GetTimerManager()
	return self._entity:GetTimerManager()
end

---@return TimerManagerPlugin
function GameComponent:GetTimerManagerPlugin()
	if not self._timerManagerPlugin then
		self._timerManagerPlugin = TimerManagerPlugin.New(self:GetTimerManager())
	end
	return self._timerManagerPlugin
end

function GameComponent:AddTimer(targetFunc, targetFuncArgs, delay, interval, updateMode, isUseUnscaledDeltaTime, isCoroutineTimer, isUseFrame)
	return self:GetTimerManagerPlugin():AddTimer(targetFunc, targetFuncArgs, delay, interval, updateMode, isUseUnscaledDeltaTime, isCoroutineTimer, isUseFrame)
end

function GameComponent:AddCoTimer(targetFunc, targetFuncArgs, delay, interval, updateMode, isUseUnscaledDeltaTime, isUseFrame)
	return self:GetTimerManagerPlugin():AddCoTimer(targetFunc, targetFuncArgs, delay, interval, updateMode, isUseUnscaledDeltaTime, isUseFrame)
end

function GameComponent:AddUpdateTimer(targetFunc, targetFuncArgs, delay, interval, isUseUnscaledDeltaTime, isUseFrame)
	return self:GetTimerManagerPlugin():AddUpdateTimer(targetFunc, targetFuncArgs, delay, interval, isUseUnscaledDeltaTime, isUseFrame)
end
function GameComponent:AddFixedUpdateTimer(targetFunc, targetFuncArgs, delay, interval, isUseUnscaledDeltaTime, isUseFrame)
	return self:GetTimerManagerPlugin():AddFixedUpdateTimer(targetFunc, targetFuncArgs, delay, interval, isUseUnscaledDeltaTime, isUseFrame)
end
function GameComponent:AddLateUpdateTimer(targetFunc, targetFuncArgs, delay, interval, isUseUnscaledDeltaTime, isUseFrame)
	return self:GetTimerManagerPlugin():AddLateUpdateTimer(targetFunc, targetFuncArgs, delay, interval, isUseUnscaledDeltaTime, isUseFrame)
end

function GameComponent:AddCoUpdateTimer(targetFunc, targetFuncArgs, delay, interval, isUseUnscaledDeltaTime, isUseFrame)
	return self:GetTimerManagerPlugin():AddCoUpdateTimer(targetFunc, targetFuncArgs, delay, interval, isUseUnscaledDeltaTime, isUseFrame)
end
function GameComponent:AddCoFixedUpdateTimer(targetFunc, targetFuncArgs, delay, interval, isUseUnscaledDeltaTime, isUseFrame)
	return self:GetTimerManagerPlugin():AddCoFixedUpdateTimer(targetFunc, targetFuncArgs, delay, interval, isUseUnscaledDeltaTime, isUseFrame)
end
function GameComponent:AddCoLateUpdateTimer(targetFunc, targetFuncArgs, delay, interval, isUseUnscaledDeltaTime, isUseFrame)
	return self:GetTimerManagerPlugin():AddCoLateUpdateTimer(targetFunc, targetFuncArgs, delay, interval, isUseUnscaledDeltaTime, isUseFrame)
end

function GameComponent:RemoveTimer(timer)
	return self:GetTimerManagerPlugin():RemoveTimer(timer)
end

function GameComponent:RemoveAllTimers()
	self:GetTimerManagerPlugin():RemoveAllTimers()
end

function GameComponent:SetIsPaused_Timers(isPaused)
	self:GetTimerManagerPlugin():SetIsPaused(isPaused)
end

----------------------------------------------------------------------
-- Pause
----------------------------------------------------------------------
function GameComponent:_SetIsPaused(isPaused)
	GameComponent.super._SetIsPaused(self, isPaused)
	self:SetIsPaused_Timers(isPaused)
	self:SetIsPaused_DOTweens(isPaused)
	self:SetIsPaused_Coroutines(isPaused)
end

----------------------------------------------------------------------
-- __Reset
----------------------------------------------------------------------
function GameComponent:_Reset()
	GameComponent.super._Reset(self)
	self:StopAllCoroutines()
	self:RemoveAllDOTweens()
	self:RemoveAllTimers()

	self:RemoveAllListeners()
end

----------------------------------------------------------------------
-- __Destroy
----------------------------------------------------------------------
function GameComponent:_Destroy()
	GameComponent.super._Destroy(self)
	self:StopAllCoroutines()
	self:RemoveAllDOTweens()
	self:RemoveAllTimers()

	self:RemoveAllListeners()

	self._timerManagerPlugin = nil
end

return GameComponent