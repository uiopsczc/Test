---@class UIPanel:UIObject
---@field is_add_to_child_panel_stack
---@field _layerName string
---@field is_resident boolean
---@field _isHideBlackMaskBehind boolean
local UIPanel = Class("UIPanel", UIObject)

function UIPanel:Init()
	UIPanel.super.Init(self)
	self._sortingOrder = math.mininteger
	self._isHideBlackMaskBehind = false
end

function UIPanel:OnAllAssetsLoadDone()
	UIPanel.super.OnAllAssetsLoadDone(self)
	local canvas = self:GetCanvas()
	canvas.overrideSorting = true
	canvas.sortingLayerName = "UI"
	self:GetGraphicComponent():GetGameObject():GetOrAddComponent(typeof(CS.UnityEngine.UI.GraphicRaycaster))
	self:OnSortingOrderChange()
end

---@param parentTransform CS.UnityEngine.Transform
function UIPanel:OnInitPanel(parentTransform)
	---@type CS.CsCat.UILayer
	self._uiLayer = global.client.uiManager._uiLayerManager:GetUILayer(self._layerName)
	self:GetGraphicComponent():SetParentTransform(parentTransform or self._uiLayer.graphicComponent.transform)
	self._uiLayer:AddPanel(self)
end

---@return CS.UnityEngine.Canvas
function UIPanel:GetCanvas()
	if not self._canvas then
		---@type CS.UnityEngine.Canvas
		self._canvas = self:GetGraphicComponent():GetGameObject():GetOrAddComponent(typeof(CS.UnityEngine.Canvas))
	end
	return self._canvas
end

function UIPanel:GetSortingOrder()
	return self._sortingOrder
end

function UIPanel:IsHideBlackMaskBehind()
	return self._isHideBlackMaskBehind
end

---@param sortingOrder number
function UIPanel:SetSortingOrder(sortingOrder)
	if self._sortingOrder == sortingOrder then
		return
	end
	self._sortingOrder = sortingOrder
	self:OnSortingOrderChange()
end

function UIPanel:OnSortingOrderChange()
	if IsNil(self:GetGraphicComponent():GetGameObject()) then
		return
	end
	self:GetCanvas().sortingOrder = self:GetSortingOrder()
end

function UIPanel:SetToTop()
	self._uiLayer:SetPanelToTop(self)
end

function UIPanel:SetToBottom()
	self._uiLayer:SetPanelToBottom(self)
end

---@param newIndex number
function UIPanel:SetPanelIndex(newIndex)
	self._uiLayer:SetPanelIndex(self, newIndex)
end

function UIPanel:Close()
	self._uiLayer:RemovePanel(self)
	self.parent:CloseChildPanel(self.key)
end

----------------------------------------------------------------------
-- SetGet相关
----------------------------------------------------------------------
function UIPanel:SetLayerName(layerName)
	self._layerName = layerName
end

function UIPanel:_Destroy()
	UIPanel.super.__Destroy(self)
	self._sortingOrder = math.mininteger
	self._canvas = nil
	self._isHideBlackMaskBehind = false
end



return UIPanel