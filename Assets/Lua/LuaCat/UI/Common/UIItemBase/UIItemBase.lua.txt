---@class UIItemBase:UIObject
local UIItemBase = Class("UIItemBase", UIObject)

function UIItemBase:Init(parentTransform)
	UIItemBase.super.Init(self)
	self.graphicComponent:SetParentTransform(parentTransform)
	self.graphicComponent:SetPrefabPath("Assets/Resources/Common/UI/Prefab/UIItemBase.prefab")
end

function UIItemBase:InitGameObjectChildren()
	UIItemBase.super.InitGameObjectChildren(self)
	self.contentTransform = self.graphicComponent.transform:Find("content")
	self.contentBgImage = self.contentTransform:FindComponentInChildren(typeof(CS.UnityEngine.UI.Image), "bg")
	self.contentBgGameObject = self.contentBgImage.gameObject
	self.contentQualityImage = self.contentTransform:FindComponentInChildren(typeof(CS.UnityEngine.UI.Image), "quality")
	self.contentIconImage = self.contentTransform:FindComponentInChildren(typeof(CS.UnityEngine.UI.Image), "icon")
	self.contentCountText = self.contentTransform:FindComponentInChildren(typeof(CS.UnityEngine.UI.Text), "count")
	self.nameTransform = self.graphicComponent.transform:Find("name")
	self.nameBgImage = self.nameTransform:FindComponentInChildren(typeof(CS.UnityEngine.UI.Image), "bg")
	self.nameText = self.nameTransform:FindComponentInChildren(typeof(CS.UnityEngine.UI.Text), "text")
end

---@param isShowName @不填为true
function UIItemBase:Show(itemId, itemCount, isShowName)
	if isShowName == nil then
		isShowName = true
	end

	self.itemId = itemId
	self.itemCount = itemCount

	self.cfgItemData = CfgItem.get_by_id(itemId)
	self.cfgQualityData = self.cfgItemData.quality_id == nil and nil or CfgProperty.get_by_id(self.cfgItemData.quality_id)

	if not string.IsNilOrWhiteSpace(self.cfgItemData.bg_path) then
		self:SetImageAsync(self.contentBgImage, self.cfgItemData.bg_path, nil, false)
	end
	if self.cfgQualityData and not string.IsNilOrWhiteSpace(self.cfgQualityData.icon_path) then
		self:SetImageAsync(self.contentQualityImage, self.cfgQualityData.icon_path, nil, false)
	else
		self.contentBgGameObject:SetActive(false)
	end
	self:SetImageAsync(self.contentIconImage, self.cfgItemData.icon_path, nil, false)
	self.contentCountText.text = (self.itemCount == 0 or self.itemCount == 1) and "" or string.format("x%s", self.itemCount)
	self.nameText.text = self.cfgItemData.name
end

return UIItemBase