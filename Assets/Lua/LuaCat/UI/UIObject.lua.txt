---@class UIObject:GameEntity
local UIObject = Class("UIObject", GameEntity)

function UIObject:Init()
	UIObject.super.Init(self)
	---@type table<string,UIPanel>
	self._childPanelDict = self._childPanelDict or {}
	---@type CS.CsCat.UGUIEventListener
	self._registeredUGUIEventListenerList = self._registeredUGUIEventListenerList or {}
end

function UIObject:CreateGraphicComponent()
	return self:AddComponent(nil, UIGraphicComponent, self._resLoadComponent)
end

function UIObject:InitGameObjectChildren()
	GameEntity.super.InitGameObjectChildren(self)
	self:_InitUI()
	self:_InitUIExtensions()
end

function UIObject:_InitUI()

end

function UIObject:_InitUIExtensions()

end

function UIObject:InitGameObjectChildren()
	self._frameTransform = self:GetGraphicComponent():GetTransform():Find("Frame")
	if not IsNil(self._frameTransform) then
		self._contentTransform = self._frameTransform:Find("Content")
	end
	UIObject.super.InitGameObjectChildren(self)
end

----------------------------------------------------------------------
-- UGUIEventListener相关
----------------------------------------------------------------------
---@param uguiEventListener CS.CsCat.UGUIEventListener
function UIObject:SaveRegisteredUGUIEventListener(uguiEventListener)
	if table.ContainsValue(self._registeredUGUIEventListenerList, uguiEventListener) then
		return
	end
	table.insert(self._registeredUGUIEventListenerList, uguiEventListener)
end

-- OnClick
function UIObject:RegisterOnClick(target, func, soundPath)
	local result = function(go, eventData)
		if soundPath then
			global.client.audioManager:PlayUISound(soundPath)
		end
		func()
	end
	local gameObject = target.gameObject
	UGUIEventListener.Get(gameObject).onClick = DelegateUtil.Add(UGUIEventListener.Get(gameObject).onClick, result)
	self:SaveRegisteredUGUIEventListener(gameObject:GetComponent(typeof(CS.CsCat.UGUIEventListener)))
	return result
end

function UIObject:UnRegisterOnClick(target, func)
	UGUIEventListener.RemoveListener(target.gameObject, func, "onClick")
end

-- OnDrag
function UIObject:RegisterOnDrag(target, func)
	local result = function(gameObject, eventData)
		func(eventData)
	end
	local gameObject = target.gameObject
	UGUIEventListener.Get(gameObject).onDrag = DelegateUtil.Add(UGUIEventListener.Get(gameObject).onDrag, result)
	self:SaveRegisteredUGUIEventListener(gameObject:GetComponent(typeof(CS.CsCat.UGUIEventListener)))
	return result
end

function UIObject:UnRegisterOnDrag(target, func)
	UGUIEventListener.RemoveListener(target.gameObject, func, "onDrag")
end

-- OnPointerDown
function UIObject:RegisterOnPointerDown(target, func)
	local result = function(go, eventData)
		func(eventData)
	end
	local gameObject = target.gameObject
	UGUIEventListener.Get(gameObject).onPointerDown = DelegateUtil.Add(UGUIEventListener.Get(gameObject).onPointerDown, result)
	self:SaveRegisteredUGUIEventListener(gameObject:GetComponent(typeof(CS.CsCat.UGUIEventListener)))
	return result
end

function UIObject:UnRegisterOnPointerDown(target, func)
	UGUIEventListener.RemoveListener(target.gameObject, func, "onPointerDown")
end

-- OnPointerUp
function UIObject:RegisterOnPointerUp(target, func)
	local result = function(gameObject, eventData)
		func(eventData)
	end
	local gameObject = target.gameObject
	UGUIEventListener.Get(gameObject).onPointerUp = DelegateUtil.Add(UGUIEventListener.Get(gameObject).onPointerUp, result)
	self:SaveRegisteredUGUIEventListener(gameObject:GetComponent(typeof(CS.CsCat.UGUIEventListener)))
	return result
end

function UIObject:UnRegisterOnPointerUp(target, func)
	UGUIEventListener.RemoveListener(target.gameObject, func, "onPointerUp")
end

function UIObject:UnRegister(target)
	UGUIEventListener.RemoveAllListener(target)
end


----------------------------------------------------------------------
-- Panel相关
----------------------------------------------------------------------
---@generic T
---@param parentTransform CS.UnityEngine.Transform
---@param classType T
---@return T
function UIObject:CreateChildPanel(key, classType, parentTransform, ...)
	---@type UIPanel
	local childPanel
	if key then
		childPanel = self:GetChild(key)
	end
	if childPanel then
		error2("duplicate childPanel:%s", key)
		return nil
	end
	childPanel = self:AddChildWithoutInit(key, classType)
	childPanel:Init(...)
	childPanel:OnInitPanel(parentTransform)
	childPanel:PostInit()
	childPanel:SetIsEnabled(true, false)
	self._childPanelDict[childPanel._key] = childPanel
	return childPanel
end

function UIObject:Open()
	self:AddUIEvents()
	self:AddLogicEvents()
end

function UIObject:AddUIEvents()
end

function UIObject:AddLogicEvents()
end

---@return UIPanel
function UIObject:GetChildPanel(key)
	return self:GetChild(key)
end


-- 从Panel中Close，再调到这里来，不要直接使用这个
function UIObject:CloseChildPanel(key)
	local childPanel = self:GetChildPanel(key)
	if not childPanel then
		return
	end
	if self._childPanelDict[key] then
		self._childPanelDict[key] = nil
	end
	self:RemoveChild(key)
end

function UIObject:CloseAllChildPanels(isRemainResidentPanels)
	local panelNameList = table.Keys_Dict(self._childPanelDict)
	for _, panelName in ipairs(panelNameList) do
		local childPanel = self._childPanelDict[panelName]
		if not childPanel.is_resident or not isRemainResidentPanels then
			childPanel:Close()
		end
	end
end


----------------------------------------------------------------------
-- Util
----------------------------------------------------------------------
---@param callback fun(image:CS.UnityEngine.UI.Image)
---@param isSetNativeSize @不填为true
---@param assetPath string
---@param image CS.UnityEngine.UI.Image
function UIObject:SetImageAsync(image, assetPath, callback, isSetNativeSize)
	if isSetNativeSize == nil then
		isSetNativeSize = true
	end
	self._resLoadComponent:GetOrLoadAsset(string.GetMainAssetPath(assetPath), function(assetCat)
		if IsNil(image) then
			return
		end
		image.sprite = assetCat:Get(string.GetSubAssetPath(assetPath), typeof(CS.UnityEngine.Sprite))
		if isSetNativeSize then
			image:SetNativeSize()
		end
		if callback then
			callback(image)
		end
	end)
end

---@param callback fun(image:CS.UnityEngine.UI.RawImage)
---@param isSetNativeSize @不填为true
---@param assetPath string
---@param image CS.UnityEngine.UI.RawImage
function UIObject:SetRawImageAsync(image, assetPath, callback, isSetNativeSize)
	if isSetNativeSize == nil then
		isSetNativeSize = true
	end
	self._resLoadComponent:GetOrLoadAsset(string.GetMainAssetPath(assetPath), function(assetCat)
		if IsNil(image) then
			return
		end
		image.texture = assetCat:Get(string.GetSubAssetPath(assetPath), typeof(CS.UnityEngine.Texture))
		if isSetNativeSize then
			image:SetNativeSize()
		end
		if callback then
			callback(image)
		end
	end)
end

----------------------------------------------------------------------
-- _Reset
----------------------------------------------------------------------
function UIObject:_Reset()
	UIObject.super._Reset(self)
	for _, registeredUGUIEventListener in ipairs(self._registeredUGUIEventListenerList) do
		registeredUGUIEventListener:Destroy()
	end
	self._registeredUGUIEventListenerList = {}
end

----------------------------------------------------------------------
-- SetGet相关
----------------------------------------------------------------------
function UIObject:GetFrameTransform()
	return self._frameTransform
end

function UIObject:GetContentTransform()
	return self._contentTransform
end

----------------------------------------------------------------------
-- __Destroy
----------------------------------------------------------------------
function UIObject:_Destroy()
	UIObject.super._Destroy(self)
	for _, registeredUGUIEventListener in ipairs(self._registeredUGUIEventListenerList) do
		registeredUGUIEventListener:Destroy()
	end
	self._registeredUGUIEventListenerList = {}
end

return UIObject