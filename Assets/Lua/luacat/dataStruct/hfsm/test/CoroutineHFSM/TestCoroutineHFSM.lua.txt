local A_CoroutineHFSMState = require("luacat.dataStruct.hfsm.test.CoroutineHFSM.A_CoroutineHFSMState")
local B_CoroutineHFSMState = require("luacat.dataStruct.hfsm.test.CoroutineHFSM.B_CoroutineHFSMState")

----@class TestCoroutineHFSM:CoroutineHFSM
local TestCoroutineHFSM = Class("TestCoroutineHFSM", CoroutineHFSM)


function TestCoroutineHFSM:InitStates()
  TestCoroutineHFSM.super.InitStates(self)
  self:AddSubDirectState("a",A_CoroutineHFSMState)
  self:AddSubDirectState("b",B_CoroutineHFSMState)
  self:SetDefaultSubDirectState("a")
end

function TestCoroutineHFSM:Test1()
  self:ChangeToState("a")
end

function TestCoroutineHFSM:Test2()
  self:ChangeToState("b")
end

return TestCoroutineHFSM