---@class UIObject:GameEntity
local UIObject = Class("UIObject", GameEntity)

function UIObject:Init()
  UIObject.super.Init(self)
  ---@type table<string,UIPanel>
  self.child_panel_dict = self.child_panel_dict or {}
  ---@type CS.CsCat.UGUIEventListener
  self.registered_uguiEventListener_list = self.registered_uguiEventListener_list or {}
end

function UIObject:CreateGraphicComponent()
  return self:AddComponent(nil, UIGraphicComponent, self.resLoadComponent)
end

----------------------------------------------------------------------
-- UGUIEventListener相关
----------------------------------------------------------------------
---@param uguiEventListener CS.CsCat.UGUIEventListener
function UIObject:SaveRegisteredUGUIEventListener(uguiEventListener)
  if table.ContainsValue(self.registered_uguiEventListener_list , uguiEventListener) then
    return
  end
  table.insert(self.registered_uguiEventListener_list, uguiEventListener)
end

-- OnClick
function UIObject:RegisterOnClick(target, func, sound_path)
  local result = function(go, eventData)
    if sound_path then
      global.client.audioManager:PlayUISound(sound_path)
    end
    func()
  end
  local gameObject = target.gameObject
  UGUIEventListener.Get(gameObject).onClick = DelegateUtil.Add(UGUIEventListener.Get(gameObject).onClick, result)
  self:SaveRegisteredUGUIEventListener(gameObject:GetComponent(typeof(CS.CsCat.UGUIEventListener)))
  return result
end

function UIObject:UnRegisterOnClick(target, func)
  UGUIEventListener.RemoveListener(target.gameObject, func, "onClick")
end

-- OnDrag
function UIObject:RegisterOnDrag(target, func)
  local result = function(go, eventData)
    func(eventData)
  end
  local gameObject = target.gameObject
  UGUIEventListener.Get(gameObject).onDrag = DelegateUtil.Add(UGUIEventListener.Get(gameObject).onDrag, result)
  self:SaveRegisteredUGUIEventListener(gameObject:GetComponent(typeof(CS.CsCat.UGUIEventListener)))
  return result
end

function UIObject:UnRegisterOnDrag(target, func)
  UGUIEventListener.RemoveListener(target.gameObject, func, "onDrag")
end

-- OnPointerDown
function UIObject:RegisterOnPointerDown(target, func)
  local result = function(go, eventData)
    func(eventData)
  end
  local gameObject = target.gameObject
  UGUIEventListener.Get(gameObject).onPointerDown = DelegateUtil.Add(UGUIEventListener.Get(gameObject).onPointerDown, result)
  self:SaveRegisteredUGUIEventListener(gameObject:GetComponent(typeof(CS.CsCat.UGUIEventListener)))
  return result
end

function UIObject:UnRegisterOnPointerDown(target, func)
  UGUIEventListener.RemoveListener(target.gameObject, func, "onPointerDown")
end

-- OnPointerUp
function UIObject:RegisterOnPointerUp(target, func)
  local result = function(go, eventData)
    func(eventData)
  end
  local gameObject = target.gameObject
  UGUIEventListener.Get(gameObject).onPointerUp = DelegateUtil.Add(UGUIEventListener.Get(gameObject).onPointerUp, result)
  self:SaveRegisteredUGUIEventListener(gameObject:GetComponent(typeof(CS.CsCat.UGUIEventListener)))
  return result
end

function UIObject:UnRegisterOnPointerUp(target, func)
  UGUIEventListener.RemoveListener(target.gameObject, func, "onPointerUp")
end

function UIObject:UnRegister(target)
  UGUIEventListener.RemoveAllListener(target)
end


----------------------------------------------------------------------
-- Panel相关
----------------------------------------------------------------------
---@generic T
---@param parent_transform CS.UnityEngine.Transform
---@param class_type T
---@return T
function UIObject:CreateChildPanel(key, class_type, parent_transform, ...)
  ---@type UIPanel
  local child_panel
  if key then
    child_panel = self:GetChild(key)
  end
  if child_panel then
    error2("duplicate child_panel:%s", key)
    return nil
  end
  child_panel = self:AddChildWithoutInit(key, class_type)
  child_panel:Init(...)
  child_panel:OnInitPanel(parent_transform)
  child_panel:PostInit()
  child_panel:SetIsEnabled(true, false)
  self.child_panel_dict[child_panel.key] = child_panel
  return child_panel
end

function UIObject:Open()
  self:AddUnityEvents()
  self:AddGameEvents()
end


function UIObject:AddUnityEvents()
end

function UIObject:AddGameEvents()
end


---@return UIPanel
function UIObject:GetChildPanel(key)
  return self:GetChild(key)
end


-- 从Panle中Close，再调到这里来，不要直接使用这个
function UIObject:CloseChildPanel(key)
  local child_panel = self:GetChildPanel(key)
  if not child_panel then
    return
  end
  if self.child_panel_dict[key] then
    self.child_panel_dict[key] = nil
  end
  self:RemoveChild(key)
end


function UIObject:CloseAllChildPanels(is_reamin_resident_panels)
  local panel_name_list = table.Keys_Dict(self.child_panel_dict)
  for _, panel_name in ipairs(panel_name_list) do
    local child_panel = self.child_panel_dict[panel_name]
    if not child_panel.is_resident or not is_reamin_resident_panels then
      child_panel:Close()
    end
  end
end


----------------------------------------------------------------------
-- Util
----------------------------------------------------------------------
---@param callbak fun(image:CS.UnityEngine.UI.Image)
---@param is_setNativeSize @不填为true
---@param asset_path string
---@param image CS.UnityEngine.UI.Image
function UIObject:SetImageAsync(image, asset_path, callbak, is_setNativeSize)
  if is_setNativeSize == nil then
    is_setNativeSize = true
  end
  self.resLoadComponent:GetOrLoadAsset(string.GetMainAssetPath(asset_path), function(assetCat)
    if IsNil(image) then
      return
    end
    image.sprite = assetCat:Get(string.GetSubAssetPath(asset_path),typeof(CS.UnityEngine.Sprite))
    if is_setNativeSize then
      image:SetNativeSize()
    end
    if callbak then
      callbak(image)
    end
  end)
end

---@param callbak fun(image:CS.UnityEngine.UI.RawImage)
---@param is_setNativeSize @不填为true
---@param asset_path string
---@param image CS.UnityEngine.UI.RawImage
function UIObject:SetRawImageAsync(image, asset_path, callbak , is_setNativeSize)
  if is_setNativeSize == nil then
    is_setNativeSize = true
  end
  self.resLoadComponent:GetOrLoadAsset(string.GetMainAssetPath(asset_path), function(assetCat)
    if IsNil(image) then
      return
    end
    image.texture = assetCat:Get(string.GetSubAssetPath(asset_path),typeof(CS.UnityEngine.Texture))
    if is_setNativeSize then
      image:SetNativeSize()
    end
    if callbak then
      callbak(image)
    end
  end)
end

----------------------------------------------------------------------
-- __Reset
----------------------------------------------------------------------
function UIObject:__Reset()
  UIObject.super.__Reset(self)
  for _, registered_uguiEventListener in ipairs(self.registered_uguiEventListener_list)  do
    registered_uguiEventListener:Destroy()
  end
  self.registered_uguiEventListener_list={}
end

----------------------------------------------------------------------
-- __Destroy
----------------------------------------------------------------------
function UIObject:__Destroy()
  UIObject.super.__Destroy(self)
  for _, registered_uguiEventListener in ipairs(self.registered_uguiEventListener_list)  do
    registered_uguiEventListener:Destroy()
  end
  self.registered_uguiEventListener_list={}
end

return UIObject