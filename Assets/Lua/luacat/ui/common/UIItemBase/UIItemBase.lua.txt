---@class UIItemBase:UIObject
local UIItemBase = Class("UIItemBase", UIObject)

function UIItemBase:Init(parent_transform)
  UIItemBase.super.Init(self)
  self.graphicComponent:SetParentTransform(parent_transform)
  self.graphicComponent:SetPrefabPath("Assets/Resources/common/ui/prefab/UIItemBase.prefab")
end

function UIItemBase:InitGameObjectChildren()
  UIItemBase.super.InitGameObjectChildren(self)
  self.content_transform = self.graphicComponent.transform:Find("content")
  self.content_bg_image = self.content_transform:FindComponentInChildren(typeof(CS.UnityEngine.UI.Image),"bg")
  self.content_bg_gameObject = self.content_bg_image.gameObject
  self.content_quality_image = self.content_transform:FindComponentInChildren(typeof(CS.UnityEngine.UI.Image),"quality")
  self.content_icon_image = self.content_transform:FindComponentInChildren(typeof(CS.UnityEngine.UI.Image),"icon")
  self.content_count_text = self.content_transform:FindComponentInChildren(typeof(CS.UnityEngine.UI.Text),"count")
  self.name_transform = self.graphicComponent.transform:Find("name")
  self.name_bg_image = self.name_transform:FindComponentInChildren(typeof(CS.UnityEngine.UI.Image),"bg")
  self.name_text = self.name_transform:FindComponentInChildren(typeof(CS.UnityEngine.UI.Text),"text")
end

---@param is_show_name @不填为true
function UIItemBase:Show(item_id, item_count, is_show_name)
  if is_show_name == nil then
    is_show_name = true
  end

  self.item_id = item_id
  self.item_count = item_count

  self.itemDefinition = global.definitionManager.itemDefinition[item_id]
  self.qualityDefinition = self.itemDefinition.quality_id == nil and nil or global.definitionManager.qualityDefinition[self.itemDefinition.quality_id]

  if not string.IsNilOrWhiteSpace(self.itemDefinition.bg_path) then
    self:SetImageAsync(self.content_bg_image, self.itemDefinition.bg_path,nil, false)
  end
  if self.qualityDefinition and not string.IsNilOrWhiteSpace(self.qualityDefinition.icon_path) then
    self:SetImageAsync(self.content_quality_image, self.qualityDefinition.icon_path,nil, false)
  else
    self.content_bg_gameObject:SetActive(false)
  end
  self:SetImageAsync(self.content_icon_image, self.itemDefinition.icon_path,nil ,false)
  self.content_count_text.text = (self.item_count == 0 or self.item_count == 1) and "" or string.format("x%s", self.item_count)
  self.name_text.text = self.itemDefinition.name
end


return UIItemBase